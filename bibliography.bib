@article{DBLP:journals/access/MoreschiniPLNHT22,
  author       = {Sergio Moreschini and
                  Fabiano Pecorelli and
                  Xiaozhou Li and
                  Sonia Naz and
                  David H{\"{a}}stbacka and
                  Davide Taibi},
  title        = {Cloud Continuum: The Definition},
  journal      = {{IEEE} Access},
  volume       = {10},
  pages        = {131876--131886},
  year         = {2022},
  url          = {https://doi.org/10.1109/ACCESS.2022.3229185},
  doi          = {10.1109/ACCESS.2022.3229185},
  timestamp    = {Tue, 31 Jan 2023 20:44:07 +0100},
  biburl       = {https://dblp.org/rec/journals/access/MoreschiniPLNHT22.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{DBLP:journals/computer/BealPV15,
  author       = {Jacob Beal and
                  Danilo Pianini and
                  Mirko Viroli},
  title        = {Aggregate Programming for the Internet of Things},
  journal      = {Computer},
  volume       = {48},
  number       = {9},
  pages        = {22--30},
  year         = {2015},
  url          = {https://doi.org/10.1109/MC.2015.261},
  doi          = {10.1109/MC.2015.261},
  timestamp    = {Wed, 12 Aug 2020 10:31:37 +0200},
  biburl       = {https://dblp.org/rec/journals/computer/BealPV15.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/forte/DamianiVPB15,
  author       = {Ferruccio Damiani and
                  Mirko Viroli and
                  Danilo Pianini and
                  Jacob Beal},
  title        = {Code Mobility Meets Self-organisation: {A} Higher-Order Calculus of
                  Computational Fields},
  series       = {Lecture Notes in Computer Science},
  volume       = {9039},
  pages        = {113--128},
  publisher    = {Springer},
  year         = {2015},
  url          = {https://doi.org/10.1007/978-3-319-19195-9_8},
  doi          = {10.1007/978-3-319-19195-9_8},
  timestamp    = {Tue, 20 Aug 2019 15:26:58 +0200},
  biburl       = {https://dblp.org/rec/conf/forte/DamianiVPB15.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{FARABEGOLI2024,
  title = {Scalability through Pulverisation: Declarative deployment reconfiguration at runtime},
  journal = {Future Generation Computer Systems},
  year = {2024},
  issn = {0167-739X},
  doi = {https://doi.org/10.1016/j.future.2024.07.042},
  url = {https://www.sciencedirect.com/science/article/pii/S0167739X24004047},
  author = {Nicolas Farabegoli and Danilo Pianini and Roberto Casadei and Mirko Viroli},
  keywords = {Runtime reconfiguration, Distributed systems, Self-adaptation, Self-organisation, Pulverisation, Deployment},
  abstract = {In recent years, the infrastructure supporting the execution of situated distributed computations evolved at a fast pace. Modern collective adaptive applications – as found in the Internet of Things, swarm robotics, and social computing – are designed to be executed on very diverse devices and to be deployed on infrastructures composed of devices ranging from cloud servers to wearable devices, constituting together a cloud–edge continuum. The availability of such an infrastructure opens to better resource utilisation and performance but, at the same time, introduces new challenges to software designers, as applications must be conceived to be able to adapt to changing deployment domains and conditions. In this paper, we introduce a practical framework for the development of systems based on the concept of pulverisation, meant to neatly separate business logic and deployment concerns, allowing applications to be defined independently of the infrastructure they will execute upon, thus supporting scalability. The framework is based on a domain-specific language capturing, in a declarative fashion: pulverised application components, device capabilities, resource allocation, and (runtime re-) configuration policies. The framework, implemented in Kotlin multiplatform and available as open source, is then evaluated in a small-scale real-world demo and in a city-scale simulated scenario, demonstrating the feasibility of the approach and its potential benefits in achieving better trade-offs between performance and resource utilisation.}
}

@article{DBLP:journals/tomacs/ViroliABDP18,
  author       = {Mirko Viroli and
                  Giorgio Audrito and
                  Jacob Beal and
                  Ferruccio Damiani and
                  Danilo Pianini},
  title        = {Engineering Resilient Collective Adaptive Systems by Self-Stabilisation},
  journal      = {{ACM} Trans. Model. Comput. Simul.},
  volume       = {28},
  number       = {2},
  pages        = {16:1--16:28},
  year         = {2018},
  url          = {https://doi.org/10.1145/3177774},
  doi          = {10.1145/3177774},
  timestamp    = {Sat, 08 Jan 2022 02:24:15 +0100},
  biburl       = {https://dblp.org/rec/journals/tomacs/ViroliABDP18.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}